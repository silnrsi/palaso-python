#!/usr/bin/env python2.6
'''
Generate an XML file from an keyman keyboard which describes what 
characters are output for every key (shifted and unshifted) on an standard
105 key keyboard.
NOTE: This will not generate mappings key sequences, dead-keys or keys in 
combination with meta keys other than shift.
'''
__version__ = '1.2'
__date__    = '25 September 2009'
__author__  = 'Tim Eves <tim_eves@sil.org>'
__credits__ = '''\
Martin Hosken for the original Perl implementation of this script. 
This version uses libkmflcomp to process the source rather than parse the 
source directly so it works better with more complex keyboards.
'''

import codecs, optparse, sys
from palaso.kmfl import kmfl
from palaso import kmn
from htmlentitydefs import codepoint2name


key_tops  = r'''`1234567890-=QWERTYUIOP[]\ASDFGHJKL;'ZXCVBNM,./'''
shifted   = r'''~!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:"ZXCVBNM<>?'''
unshifted = r'''`1234567890-=qwertyuiop\[]\\asdfghjkl;'zxcvbnm,./'''


header = u'''\
<?xml version='1.0' encoding='UTF-8'?>
<keyboard font='{font}' size='{size}' name='{name}'>
'''.format

key = u'''\
    <key id=\"{0}\" unshift='{1}' shift='{2}'/>
'''.format

footer = u'''</keyboard>'''



def quote(cs):
    r = u''
    for c in cs:
        ent = codepoint2name.get(ord(c))
        r += (('&'+ent+';') if ent else c)
    return r


def output_chars(keypresses):
    return [quote(kb.run_items([it])) for it in kmn.keysyms_items(keypresses)]


parser = optparse.OptionParser(usage='%prog [options] <KEYMAN FILE>\n' + __doc__)
parser.add_option("-f","--font",action='store',metavar='FONTNAME',
                  help='Specify the preferred font for the keyboard output')
parser.add_option("-s","--size",action='store',type="float", metavar='POINTS',
                  help='The size of the output characters')

(opts,kmns) = parser.parse_args()
if len(kmns) == 0:
    sys.stderr.write(parser.expand_prog_name('%prog: missing KEYMAN FILE\n'))
    parser.print_help(file=sys.stderr)
    sys.exit(1)

kb = kmfl(kmns[0])
out = codecs.getwriter('utf_8')(sys.stdout)
out.write(header(font=opts.font or '', 
                 size=opts.font and opts.size or '',
                 name=kb.store('NAME')))
out.writelines(map(key, key_tops, output_chars(unshifted), output_chars(shifted)))
out.write(footer)
