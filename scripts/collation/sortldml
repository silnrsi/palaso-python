#!/usr/bin/python2.6

import sys, xml.sax, palaso, pprint, PyICU
from optparse import OptionParser
from palaso.collation import *
from palaso.contexts import console

with console() :
    usage = "%prog -l ldml_file [infile [outfile]]"
    parser = OptionParser(usage)
    parser.add_option("-l", "--ldml", help = "LDML file containing collation")
    parser.add_option("-a", "--alt", help = "Optional alternate collation to use")
    parser.add_option("-d", "--depth", default = 15, help = "sort level")
    parser.add_option("-z", action="store_true")
    (options, args) = parser.parse_args()

    if len(args) > 0 :
        infile = open(args[0])
    else :
        infile = sys.stdin

    if len(args) > 1 :
        outfile = open(args[1], "w")
    else :
        outfile = sys.stdout

    if options.ldml :
        handler = palaso.collation.tailor.LDMLHandler()
        ldmlparser = xml.sax.make_parser()
        ldmlparser.setContentHandler(handler)
        ldmlparser.setFeature(xml.sax.handler.feature_namespaces, 1)
        ldmlparser.setFeature(xml.sax.handler.feature_namespace_prefixes, 1)
        ldmlparser.parse(options.ldml)
        collation = handler.collations[0]
        for c in handler.collations :
            if c.type == options.alt :
                collation = c
                break

        collation.flattenOrders(debug=options.z)
        errors = collation.testPrimaryMultiple()
        for e in errors :
            sys.stderr.write("Reset with primary: " + e.encode('utf-8') + " has multiple elements\n")
        tailor = collation.asICU()
    else :
        tailor = ""
    results = palaso.collation.icu.sorted(tailor, infile.readlines(), options.depth)
    outfile.write("".join(results))
    if options.z :
        print tailor.encode("utf-8")
        if collation :
            icuCollation = PyICU.RuleBasedCollator(tailor, options.depth)
            for s in sorted(collation.getElements()) :
                print "%s : %s" % (pprint.pformat(s), palaso.collation.icu.strkey(icuCollation.getCollationKey(s)))
