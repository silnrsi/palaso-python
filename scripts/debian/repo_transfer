#!/usr/bin/python

import urllib, ConfigParser, os, re
from optparse import OptionParser
from palaso.debian.sources import source_collection, getdistro, getbasever

p = OptionParser(usage = "%prog [options] repo_url [package [package ...]]")
p.set_defaults(distro = getdistro(), section = "main")
p.add_option('-a', '--arch', help = 'Architecture to build for')
p.add_option('-b', '--backport', action='store_true', help='add ~backport to version')
p.add_option('-d', '--distro', help = 'distribution')
p.add_option('-e', '--edits', help = 'config file giving control values per package')
p.add_option('-l', '--list', action = 'store_true', help = 'Don\'t do anything, just list would be done')
p.add_option('-n', '--newdistro', help = 'new distribution')
p.add_option('-p', '--put' , help = 'dput target')
p.add_option('-s', '--section', help = 'distribution section to process')
(opts, args) = p.parse_args()
host = args[0]

url = host + "/dists/" + opts.distro + "/" + opts.section + "/source/Sources"
x = source_collection(url)
print "Found %d packages in the original repository" % len(x.sources)

y = source_collection(host + "/dists/" + opts.newdistro + "/" + opts.section + "/source/Sources")
print "Found %d packages in the target repository" % len(y.sources)

edits = ConfigParser.ConfigParser()
if opts.edits :
    edits.read(opts.edits)
    
for s in x.sources :
    if len(args) > 1 and s not in args[1:] : continue
    if s in y.sources : continue
    if edits.has_option(s, 'Remove') : continue
    src = x.sources[s]
    v = src['version']
    if edits.has_option(s, 'Version') :
        v = edits.get(s, 'Version') 
    newv = v.replace(opts.distro, opts.newdistro)
    if newv == v :
        if opts.backport :
            newv = v + "~backport"
        else :
            newv = v
        newv = newv + "+" + opts.newdistro + "1"
    basever = getbasever(v)
    print "%s: %s(%s) -> %s" % (s, v, basever, newv)
    if opts.list : continue
    dir = "%s-%s" % (s, basever)
    x.download(s, dir, host)
    os.chdir(dir)
    cmd = "dch --force-distribution -v '" + newv + "' -D " + opts.newdistro + " -m 'Transfer from " + opts.distro + "'"
    print cmd
    os.system(cmd)
    os.chdir("..")
    cmd = "dpkg-source"
    if edits.has_section(s) :
        for e in edits.items(s) :
            if e[0].lower() != 'version' :
                cmd += " -D%s='%s'" % e
    cmd += " -b " + dir
    print cmd
    if os.system(cmd) == 0 :
        changes = "'%s_%s_source.changes'" % (s, re.sub(r"^\d:", "", newv))
        os.chdir(dir)
        cmd = "dpkg-genchanges -sa -S > ../" + changes
        os.system(cmd)
        os.chdir('..')
        cmd = "debsign -m'" + os.environ['DEBEMAIL'] + "' " + changes
        os.system(cmd)
        cmd = "dput " + opts.put + " " + changes
        print cmd
        os.system(cmd)
    else :
        print "ERROR: BUILD %s FAILED" % s
    os.system("rm -fr " + dir)

